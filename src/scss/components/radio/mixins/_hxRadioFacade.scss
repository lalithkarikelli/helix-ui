// ===== Mixins for <hx-radio> facade states =====

// ========== PRISTINE ==========
@mixin __radioFacade($pseudo-state: null) {
  @if $pseudo-state == focus {
    box-shadow: $focus-glow;
  }
  @else {
    background-color: var(--hxRadio-pristine-radio-facade-bgcolor, $gray-0);
    border: 1px solid currentColor;
    color: var(--hxRadio-pristine-radio-facade-color, $blue-700);
  }
}

// ========== INVALID ==========
@mixin __radioFacade--invalid($pseudo-state: null) {
  @if $pseudo-state == focus {
    box-shadow: $focus-glow-invalid;
  }
  @else if $pseudo-state == hover {
    background-color: var(--hxRadio-invalid-radio-facade-hover-bgcolor, $red-status-100);
    border: 1px solid currentColor;
    color: var(--hxRadio-invalid-radio-facade-hover-color, $red-status-900);
  }
  @else {
    border: 1px solid currentColor;
    color: var(--hxRadio-invalid-radio-facade-color, $red-status-900);
  }
}

// ========== DISABLED ==========
@mixin __radioFacade--disabled($pseudo-state: null) {
  @if $pseudo-state == hover {
    background-color: var(--hxRadio-disabled-radio-facade-hover-bgcolor, $gray-0);
    border: 1px solid currentColor;
    color: var(--hxRadio-disabled-radio-facade-hover-color, $gray-500);
  }
  @else {
    border: 1px solid currentColor;
    color: var(--hxRadio-disabled-radio-facade-color, $gray-500);
    cursor: not-allowed;
  }
}

@mixin hxRadioFacade($state: null, $pseudo-state: null) {
  @if $state == invalid {
    @include __radioFacade--invalid($pseudo-state);
  }
  @else if $state == disabled {
    @include __radioFacade--disabled($pseudo-state);
  }
  @else {
    @include __radioFacade($pseudo-state);
  }
}
